{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAMA,SAASC,EAAUC,GACjBC,EAAAJ,GAASK,OAAOC,QAAQH,GAGxB,SAASI,EAAQC,GACfJ,EAAAJ,GAASK,OAAOI,QAAQD,GAiB1B,SAASE,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,uBAAqBN,QAAiBC,OAE5CM,EAAK,sBAAoBP,QAAeC,SAE3CA,MApCMQ,SAASC,cAAc,SAE/BC,iBAAiB,UAUxB,SAAsBC,GACpBA,EAAIC,iBACJ,MAAMC,EAAUC,MAAMC,cAAcC,SAAShB,MACvCiB,EAASH,MAAMC,cAAcC,SAASE,KACtCC,EAAWL,MAAMC,cAAcC,SAASI,OAE9C,IAAIC,EAAeC,OAAOT,EAAQU,OAElC,IAAK,IAAIC,EAAI,EAAGA,EAAIL,EAASI,MAAOC,GAAK,EACvC1B,EAAc0B,EAAI,EAAGH,GAAcI,KAAKnC,GAAWoC,MAAM/B,GACzD0B,GAAgBC,OAAOL,EAAOM","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formEl = document.querySelector('.form');\n\nformEl.addEventListener('submit', onFormSubmit);\n\nfunction onSuccess(result){\n  Notiflix.Notify.success(result);\n};\n\n  function onError(error){\n    Notiflix.Notify.failure(error);\n  };\n\nfunction onFormSubmit(evt) {\n  evt.preventDefault();\n  const delayEl = event.currentTarget.elements.delay;\n  const stepEl = event.currentTarget.elements.step;\n  const amountEl = event.currentTarget.elements.amount;\n \n  let delayPromise = Number(delayEl.value);\n  \n  for (let i = 0; i < amountEl.value; i += 1) {\n    createPromise(i + 1, delayPromise).then(onSuccess).catch(onError);\n    delayPromise += Number(stepEl.value); \n  }\n};\n\n  function createPromise(position, delay) {\n    const shouldResolve = Math.random() > 0.3;\n\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        if (shouldResolve) {\n          resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        } else {\n          reject(`❌ Rejected promise ${position} in ${delay}ms`);\n        }\n      }, delay);\n    })\n};\n\n\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$onSuccess","result","$parcel$interopDefault","Notify","success","$47d4ff9957288465$var$onError","error","failure","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","document","querySelector","addEventListener","evt","preventDefault","delayEl","event","currentTarget","elements","stepEl","step","amountEl","amount","delayPromise","Number","value","i","then","catch"],"version":3,"file":"03-promises.d7be7bea.js.map"}